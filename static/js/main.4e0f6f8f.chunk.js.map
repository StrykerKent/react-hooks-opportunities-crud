{"version":3,"sources":["components/OpportunityTable.js","components/AddOpportunity.js","App.js","reportWebVitals.js","index.js"],"names":["OpportunityTable","props","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","opportunities","map","opportunity","scope","name","account","location","Button","type","variant","color","size","mt","onClick","deleteOpportunity","id","AddOpportunity","initialFormState","useState","setOpportunity","handleInputChange","e","target","value","onSubmit","preventDefault","addOpportunity","TextField","label","margin","onChange","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","App","classes","createData","data","className","AppBar","position","Toolbar","IconButton","edge","Typography","Container","maxWidth","Grid","container","direction","justify","item","xs","md","filter","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e0f6f8f.chunk.js","sourcesContent":["import React from 'react'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport './OpportunityTableStyle.css'\r\n\r\nconst OpportunityTable = (props) => (\r\n  <TableContainer component={Paper}>\r\n    <Table aria-label=\"table\">\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell>Name</TableCell>\r\n          <TableCell>Account</TableCell>\r\n          <TableCell>Location</TableCell>\r\n          <TableCell></TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {props.opportunities.map((opportunity) => (\r\n          <TableRow key={opportunity.id}>\r\n            <TableCell scope=\"row\">\r\n              {opportunity.name}\r\n            </TableCell>\r\n            <TableCell>{opportunity.account}</TableCell>\r\n            <TableCell>{opportunity.location}</TableCell>\r\n            <TableCell>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                size=\"large\"\r\n                mt={2}\r\n                onClick={() => props.deleteOpportunity(opportunity.id)}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  </TableContainer>\r\n)\r\n\r\nexport default OpportunityTable","import React, { useState } from 'react'\r\nimport './AddOpportunityStyle.css'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst AddOpportunity = props => {\r\n\r\n  const initialFormState = { id: null, name: '', account: '', location: ''}\r\n  const [opportunity, setOpportunity] = useState(initialFormState)\r\n\r\n  const handleInputChange = e => {\r\n    const {name, value} = e.target\r\n    setOpportunity({...opportunity, [name]: value})\r\n  }\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        if (!opportunity.name || !opportunity.account || !opportunity.location)\r\n          return;\r\n        props.addOpportunity(opportunity);\r\n        setOpportunity(initialFormState);\r\n      }}\r\n    >\r\n      <TextField\r\n        type=\"text\"\r\n        id=\"name\"\r\n        name=\"name\"\r\n        label=\"Name\"\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        value={opportunity.name}\r\n        onChange={handleInputChange}\r\n      />\r\n      <TextField\r\n        type=\"text\"\r\n        id=\"account\"\r\n        name=\"account\"\r\n        label=\"Account\"\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        value={opportunity.account}\r\n        onChange={handleInputChange}\r\n      />\r\n      <TextField\r\n        type=\"text\"\r\n        id=\"location\"\r\n        name=\"location\"\r\n        label=\"Location\"\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        value={opportunity.location}\r\n        onChange={handleInputChange}\r\n      />\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        mt={2}\r\n      >\r\n        Add\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddOpportunity","import React, { useState } from 'react'\nimport OpportunityTable from './components/OpportunityTable'\nimport AddOpportunity from './components/AddOpportunity'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { SettingsBackupRestoreSharp } from '@material-ui/icons'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}))\n\nconst App = () => {\n  const classes = useStyles()\n\n  function createData(id, name, account, location) {\n    return { id, name, account, location };\n  }\n\n  const data = [\n    createData(1, 'Valero Expansion Project', 'Valero', 'Port Arthur, TX'),\n    createData(2, 'Blade Turnaround', 'Exxon Mobil', 'Beaumont, TX'),\n    createData(3, 'Summer 2021 Turnaround', 'Flint Hills', 'Port Arthur, TX'),\n  ];\n\n  const [opportunities, setOpportunity] = useState(data)\n\n  const addOpportunity = opportunity => {\n    opportunity.id = opportunities.length + 1\n    setOpportunity([...opportunities, opportunity])\n  }\n\n  const deleteOpportunity = (id) => {\n    setOpportunity(opportunities.filter((opportunity) => opportunity.id !== id))\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            React Hooks Opportunity CRUD\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Container maxWidth=\"xl\">\n        <h1>Opportunities</h1>\n        <Grid container direction=\"row\" justify=\"flex-start\" spacing={10}>\n          <Grid item xs={12} md={8}>\n            <OpportunityTable opportunities={opportunities} deleteOpportunity={deleteOpportunity} />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <AddOpportunity addOpportunity={addOpportunity} />\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}